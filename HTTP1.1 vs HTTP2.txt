HTTP stands for hypertext transfer protocol
and it is the basis for almost all web applications. 
More specifically, HTTP is the method computers and servers use to request and send information. 
For instance, when someone navigates to cloudflare.com on their laptop, 
their web browser sends an HTTP request to the Cloudflare servers for the content that appears on the page. 
Then, Cloudflare servers send HTTP responses with the text, images, and formatting that the browser displays to the user.

HTTP1.1:
The first usable version of HTTP was created in 1997.
Because it went through several stages of development, this first version of HTTP was called HTTP/1.1.
This version is still in use on the web. In 2015
HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it
The connection was not lost here after the first request because we add a keep-alive header which is the part of the request so there is an open connection between the server & client. 
There is a persistent connection which means several requests & responses are merged in a single connection.
It compresses data by itself.

These are the drawbacks that lead to the creation of HTTP/2: 
        The first problem is HTTP/1.1 transfer all the requests & responses in the plain text message form.
        The second one is head of line blocking in which TCP connection is blocked all other requests until the response does not receive.
all the information related to the header file is repeated in every request.    



HTTP2
HTTP/2 was developed over the SPDY protocol.
HTTP/2 solves several problems that the creators of HTTP/1.1 did not anticipate.
HTTP/2 works on the binary framing layer instead of textual that converts all the messages in binary format.
It works on fully multiplexed that is one TCP connection is used for multiple requests.
HTTP/2 uses HPACK which is used to split data from header. it compresses the header.
The server sends all the other files like CSS & JS without the request of the client using the PUSH frame.
In particular, HTTP/2 is much faster and more efficient than HTTP/1.1.
One of the ways in which HTTP/2 is faster is in how it prioritizes content during the loading process.
In contrast, HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource.
HTTP/2 does this by splitting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to.


